- name: create ec2 and route 53 record
  hosts: localhost
  connection: local
  vars:
    ami_id: ami-09c813fb71547fc4f               # same for all
    sg_id: sg-0f80e4641e406c1e3                 # seperate for everyone
    zone_id: "Z05359301W668SBI8XW8V"            # seperate for everyone
    domain_name: "devaws.store"
    instances:
    # also we can pass instances through command line also using -e.
    # - mongodb
    # - redis
    # - mysql
    # - rabbitmq
    # - shipping
    - frontend
  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t3.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        Name: "{{ item }}"
    loop: "{{ instances }}"
    register: ec2_output
    
  # - name: print the ec2_output              # this is for mongodb-instance-aws details ok.
  #   ansible.builtin.debug:
  #     msg: "{{ ec2_output }}"

  # - name: print public ip                        # testing purpose to get public ip address
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].public_ip_address }}"
  #   loop: "{{ ec2_output.results }}"


  # - name: print private ip                        # testing purpose to get private ip address
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].private_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  - name: create route 53 record
    amazon.aws.route53:
      state: present                                 # for instance delete mention absent ok 1.25.00 hrs 24 session
      zone: "{{ domain_name }}"
      record: "{{ item.item }}.{{ domain_name }}"    # mongodb.devaws.store
      type: A 
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      overwrite: true
    loop: "{{ ec2_output.results }}"

# we are create one record with public ip only for frontend
  - name: create route 53 record for frontend
    amazon.aws.route53:
      state: present                               
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}"    # mongodb.devaws.store
      type: A 
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      overwrite: true
    when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"

